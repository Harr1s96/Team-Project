
function findInComingCalls(phoneNumber, limit) {
    let sqlSearchString = "SELECT callerNumber, COUNT(*) FROM mobileCallRecords WHERE receiverNumber LIKE \'" + phoneNumber + "\' GROUP BY receiverNumber ORDER BY COUNT(*) DESC LIMIT " + limit;
    SQLauthenticate(sqlSearchString)
}

function findOutGoingCalls(phoneNumber, limit) {
    let sqlSearchString = "SELECT receiverNumber, COUNT(*) FROM mobileCallRecords WHERE callerNumber LIKE \'" + phoneNumber + "\' GROUP BY callerNumber ORDER BY COUNT(*) DESC LIMIT " + limit;
    SQLauthenticate(sqlSearchString)
}

function findPersonByMobile(phoneNumber, limit) {
    let sqlSearchString = "SELECT * FROM mobiles WHERE phoneNumber LIKE \'" + phoneNumber + "\' LIMIT " + limit;
    SQLauthenticate(sqlSearchString)
}

function findPersonsBankAccount(forenames, surname, DoB, Addr, limit) {
    let sqlSearchString = "SELECT * FROM peoplebankaccount WHERE forenames LIKE \'" + forenames + "\' AND surname LIKE \'" + surname + "\' AND address LIKE \'" + Addr + "\' AND dateOfBirth LIKE \'" + DoB + "\' LIMIT " + limit;
    SQLauthenticate(sqlSearchString)
    // returns a persons bank account
}

function findBankCard(bankAccountId, limit) {
    let sqlSearchString = "SELECT * FROM bankcard WHERE bankAccountID LIKE \'" + bankAccountId + "\' LIMIT " + limit;
    SQLauthenticate(sqlSearchString)
}









function searchByNames(forenames, surname, limit) {
    if ((typeof forenames != 'string') || (typeof surname != 'string')) {
        console.log("Not string error");
    } else {
        forenames = addWildStr(forenames);
        surname = addWildStr(surname);
        let sqlSearchString = "SELECT * FROM citizen WHERE forenames LIKE " + forenames + " AND surname LIKE " + surname + " LIMIT " + limit;

        SQLauthenticate(sqlSearchString)
    }
}






